<?xml version="1.0"?>
<!-- This code was modified from the original version in uuv_simulator:

     Copyright (c) 2016 The UUV Simulator Authors.
     All rights reserved.

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.

     Modifications:

     Copyright 2018 Nils Bore (nbore@kth.se)

     Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

     1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.

     2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.

     3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

-->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- <plugin name="register_underwater_sonar_sensor" filename="libregister_underwater_sonar_sensor.so"/> -->

  <!-- Macro for a minimal collision block (for when you do not want collision block but gazebo needs one) -->
  <xacro:macro name="no_collision">
    <collision>
      <geometry>
        <cylinder length="${0.000001}" radius="${0.000001}" />
      </geometry>
      <origin xyz="0 0 0" rpy="0 ${0.5*pi} 0"/>
    </collision>
  </xacro:macro>

  <xacro:macro name="multibeam_intensity_sonar"
    params="namespace suffix parent_link topic mass update_rate
      samples fov range_min range_max range_stddev mesh
      *inertia *origin *visual">
    <!-- Sensor link -->
    <link name="${namespace}/sonar${suffix}_link">
      <inertial>
        <xacro:insert_block name="inertia" />
        <mass value="${mass}" />
        <origin xyz="0 0 0" rpy="0 0 0" />
      </inertial>

      <xacro:insert_block name="visual" />
      <xacro:no_collision/>
    </link>

  <joint name="${namespace}_sonar${suffix}_joint" type="revolute">
    <xacro:insert_block name="origin" />
    <parent link="${parent_link}" />
    <child link="${namespace}/sonar${suffix}_link" />
    <limit upper="0" lower="0" effort="0" velocity="0" />
    <axis xyz="1 0 0"/>
  </joint>
  
  <gazebo reference="${namespace}/sonar${suffix}_link">
    <sensor type="underwater_sonar" name="sonar${suffix}">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <retro>true</retro>
      <update_rate>${update_rate}</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>${samples}</samples>
            <resolution>1</resolution>
            <min_angle>-${0.5*fov}</min_angle>
            <max_angle>${0.5*fov}</max_angle>
          </horizontal>
		  <vertical>
		    <resolution>0.5</resolution>
		    <samples>2</samples>
			<min_angle>-${0.5*fov/samples}</min_angle>
            <max_angle>${0.5*fov/samples}</max_angle>
		  </vertical>
        </scan>
        <range>
          <min>${range_min}</min>
          <max>${range_max}</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>${range_stddev}</stddev>
        </noise>
      </ray>
      <plugin name="sonar${suffix}_controller" filename="libunderwater_sonar_ros_plugin.so">
        <topicName>${topic}</topicName>
        <frameName>sonar${suffix}_link</frameName>
      </plugin>
      <!-- TODO: Separate switchable sonar version in another macro -->
	  <!-- <plugin name="switchable_sonar{suffix}_ros_interface" filename="libuuv_gazebo_ros_switchable_gpu_ray_sensor.so">
          <namespace>${namespace}</namespace>
          <input_topic>${topic}</input_topic>
	  </plugin>
	  -->
    </sensor>
  </gazebo>
  </xacro:macro>
  
  <xacro:macro name="forward_looking_sonar"
    params="namespace suffix parent_link topic mass update_rate
      samples fov width height *inertia *origin *visual">
    <!-- Sensor link -->
    <link name="${namespace}/forward_sonar${suffix}_link">
      <inertial>
        <xacro:insert_block name="inertia" />
        <mass value="${mass}" />
        <origin xyz="0 0 0" rpy="0 0 0" />
      </inertial>
      <visual>
        <geometry>
          <mesh filename="file://$(find uuv_sensor_plugins)/mesh/oe14-372.dae" scale="1 1 1"/>
        </geometry>
      </visual>

      <!-- <xacro:insert_block name="visual" /> -->
      <xacro:no_collision/>
    </link>

    <joint name="${namespace}_forward_sonar${suffix}_joint" type="revolute">
      <xacro:insert_block name="origin" />
      <parent link="${parent_link}" />
      <child link="${namespace}/forward_sonar${suffix}_link" />
      <limit upper="0" lower="0" effort="0" velocity="0" />
      <axis xyz="1 0 0"/>
    </joint>

  
    <gazebo reference="${namespace}/forward_sonar${suffix}_link">
      <sensor name="${namespace}/image_sonar" type="depth">
        <camera>
		  <horizontal_fov>${fov}</horizontal_fov>
          <image>
		    <width>${width}</width>
		    <height>${height}</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.1</near>
            <far>17</far>
          </clip>
          <save enabled="true">
            <path>/tmp/camera</path>
          </save>
        </camera>
	    <plugin filename="libimage_sonar_ros_plugin.so" name="forward_sonar${suffix}_controller">
		  <topicName>${topic}</topicName>
          <frameName>forward_sonar${suffix}_optical_frame</frameName>
        </plugin>
        <always_on>true</always_on>
	    <update_rate>${update_rate}</update_rate>
      </sensor>
    </gazebo>

	<joint name="${namespace}/forward_sonar${suffix}_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
      <parent link="${namespace}/forward_sonar${suffix}_link"/>
      <child link="${namespace}/forward_sonar${suffix}_optical_frame"/>
    </joint>
	
	<link name="${namespace}/forward_sonar${suffix}_optical_frame"/>
  </xacro:macro>
</robot>
